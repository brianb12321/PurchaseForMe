@page
@using System.Security.Claims
@model PurchaseForMe.Areas.Project.Pages.EditTaskModel
@{
}
@section Styles {
    <style>
        #console {
            position: absolute;
            width: 95%;
            height: 500px;
            background-color: black;
        }
        /* The inner console element. */
        .jqconsole {
            padding: 10px;
        }
        /* The cursor. */
        .jqconsole-cursor {
            background-color: white;
        }
        /* The cursor color when the console looses focus. */
        .jqconsole-blurred .jqconsole-cursor {
            background-color: #666;
        }
        /* The current prompt text color */
        .jqconsole-prompt {
            color: #0d0;
        }
        /* The command history */
        .jqconsole-old-prompt {
            color: #0b0;
            font-weight: normal;
        }
        /* The text color when in input mode. */
        .jqconsole-input {
            color: #dd0;
        }
        /* Previously entered input. */
        .jqconsole-old-input {
            color: #bb0;
            font-weight: normal;
        }
        /* The text color of the output. */
        .jqconsole-output {
            color: white;
        }
    </style>
}

<h1>Editing task @Model.Form.TaskName</h1>
<a asp-page="/BlockEditor"
   asp-route-ProjectGuid="@Model.ProjectGuid"
   asp-route-NodeGuid="@Model.TaskGuid">
    <button class="btn btn-primary" type="button">Edit code</button>
</a>
<button id="runButton" class="btn btn-success">Run task immediately</button>

<nav>
    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="detailsLink" onclick="openTab(event, 'details')" type="button" role="tab" aria-controls="details" aria-selected="true">Details</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" onclick="openTab(event, 'taskConsole')" type="button" role="tab" aria-controls="taskConsole" aria-selected="false">Task Console</button>
        </li>
    </ul>
</nav>

<div class="tab-pane tree-tab-content" id="details" role="tabpanel" aria-labelledby="details-tab">
    <form>
        <div class="mb-3">
            <label class="form-label" asp-for="Form.TaskName">Task Name</label>
            <input class="form-control" type="text" asp-for="Form.TaskName" />
        </div>
        <button type="submit" class="btn btn-primary">Save Task</button>
    </form>
</div>
<div class="tab-pane tree-tab-content" id="taskConsole" role="tabpanel" aria-labelledby="taskConsole-tab">
    <div id="console"></div>
</div>

@Html.HiddenFor(m => m.ProjectGuid);
@Html.HiddenFor(m => m.TaskGuid);
@Html.HiddenFor(m => m.UserId)

@section Scripts {
    <script>
        function openTab(evt, tabName) {
            // Declare all variables
            var i, tabcontent, tablinks;

            // Get all elements with class="tabcontent" and hide them
            tabcontent = document.getElementsByClassName("tree-tab-content");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Get all elements with class="tablinks" and remove the class "active"
            tablinks = document.getElementsByClassName("nav-link");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" tab-active", "");
                tablinks[i].classList.remove("active");
            }

            // Show the current tab, and add an "active" class to the button that opened the tab
            document.getElementById(tabName).style.display = "block";
            evt.currentTarget.classList.add("active");
            evt.currentTarget.className += " tab-active";
        }

        document.getElementById("detailsLink").click();
    </script>
    <script type="module" src="~/js/taskConsole.bundle.min.js"></script>
}